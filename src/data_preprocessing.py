{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyO2fu3DB0AmhS0XSjURsJN8"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"j8r0JgXqlqUm"},"outputs":[],"source":["# src/data_preprocessing.py\n","import os\n","import numpy as np\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","\n","def load_sentiment_csv(path_csv, text_col=\"text\", label_col=\"label\"):\n","    df = pd.read_csv(path_csv)\n","    assert text_col in df.columns and label_col in df.columns\n","    return df[[text_col, label_col]].rename(columns={text_col:\"text\", label_col:\"label\"})\n","\n","def split_train_val_test(df, seed=42):\n","    X = df[\"text\"].astype(str).values\n","    y = df[\"label\"].map({\"negative\":0,\"neutral\":1,\"positive\":2}).astype(int).values\n","    X_tmp, X_test, y_tmp, y_test = train_test_split(X, y, test_size=0.10, random_state=seed, stratify=y)\n","    X_train, X_val, y_train, y_val = train_test_split(X_tmp, y_tmp, test_size=0.1111, random_state=seed, stratify=y_tmp)\n","    return (X_train, y_train), (X_val, y_val), (X_test, y_test)\n","\n","def tfidf_fit_transform(X_train, X_val, X_test, max_features=10_000, min_df=2, ngram_range=(1,2)):\n","    vec = TfidfVectorizer(max_features=max_features, min_df=min_df, ngram_range=ngram_range)\n","    X_train_tf = vec.fit_transform(X_train)\n","    X_val_tf   = vec.transform(X_val)\n","    X_test_tf  = vec.transform(X_test)\n","    # Convertir a float32 densas para NumPy\n","    X_train_np = X_train_tf.toarray().astype(np.float32)\n","    X_val_np   = X_val_tf.toarray().astype(np.float32)\n","    X_test_np  = X_test_tf.toarray().astype(np.float32)\n","    return (X_train_np, X_val_np, X_test_np), vec\n"]}]}